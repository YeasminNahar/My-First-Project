// <auto-generated />
using System;
using First_Project.Datacontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace First_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221208172753_student_profile_save")]
    partial class student_profile_save
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("First_Project.Data.Resultsheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grade");

                    b.Property<string>("Subject");

                    b.Property<int>("TotalMarks");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<int?>("studentInfoId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("studentInfoId");

                    b.ToTable("resultsheetsInfo");
                });

            modelBuilder.Entity("First_Project.Data.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameBN");

                    b.Property<string>("NameEN");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isDelete");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("sectionsInfo");
                });

            modelBuilder.Entity("First_Project.Data.StudentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<string>("Roll");

                    b.Property<DateTime?>("createdAt");

                    b.Property<string>("createdBy")
                        .HasMaxLength(250);

                    b.Property<int?>("isActive");

                    b.Property<int?>("isDelete");

                    b.Property<int?>("sectionId");

                    b.Property<DateTime?>("updatedAt");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(250);

                    b.Property<string>("url");

                    b.HasKey("Id");

                    b.HasIndex("sectionId");

                    b.ToTable("studentsInfo");
                });

            modelBuilder.Entity("First_Project.Data.Resultsheet", b =>
                {
                    b.HasOne("First_Project.Data.StudentInfo", "studentInfo")
                        .WithMany()
                        .HasForeignKey("studentInfoId");
                });

            modelBuilder.Entity("First_Project.Data.StudentInfo", b =>
                {
                    b.HasOne("First_Project.Data.Section", "section")
                        .WithMany()
                        .HasForeignKey("sectionId");
                });
#pragma warning restore 612, 618
        }
    }
}
